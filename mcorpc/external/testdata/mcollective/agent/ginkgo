#!/usr/bin/env ruby

require "json"

rep = {
  "statuscode" => 1,
  "statusmsg" => "Unknown error",
  "data" => {"hello" => "world"}
}

begin
  abort("incorrect protocol") unless ENV["CHORIA_EXTERNAL_PROTOCOL"] == "io.choria.mcorpc.external.v1.rpc_request"

  req = JSON.parse(File.read(ENV["CHORIA_EXTERNAL_REQUEST"]))

  cpath = ENV["CHORIA_EXTERNAL_CONFIG"]
  expectedpath = File.expand_path(File.join(File.dirname(__FILE__), "../../../plugin.d", "ginkgo"))
  abort("invalid configuration path %s != %s" % [cpath, expectedpath]) unless cpath == expectedpath
  abort("invalid request data") unless req["data"]["hello"] == "world"

  rep["statuscode"] = 0
  rep["statusmsg"] = "OK"
rescue Exception
  rep["statuscode"] = 1
  rep["statusmsg"] = "%s at %s" % [$!, $!.backtrace[0]]
ensure
  open(ENV["CHORIA_EXTERNAL_REPLY"], "w") {|f| f.print(JSON.dump(rep))}
end
